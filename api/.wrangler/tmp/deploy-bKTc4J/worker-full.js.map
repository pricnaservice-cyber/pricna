{
  "version": 3,
  "sources": ["../../../worker-full.js"],
  "sourceRoot": "/Users/roumen/Documents/Soukrome\u0301/Nevymysli\u0301s\u030C/Pr\u030Ci\u0301c\u030Cna\u0301/Web/api/.wrangler/tmp/deploy-bKTc4J",
  "sourcesContent": ["/**\n * P\u0159\u00ED\u010Dn\u00E1 Offices API - Cloudflare Worker\n * Kompletn\u00ED implementace bez extern\u00EDch z\u00E1vislost\u00ED\n */\n\nconst corsHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n};\n\n// === HELPER FUNCTIONS ===\n\nfunction jsonResponse(data, status = 200) {\n  return new Response(JSON.stringify(data), {\n    status,\n    headers: { 'Content-Type': 'application/json', ...corsHeaders }\n  });\n}\n\nfunction errorResponse(message, status = 400) {\n  return jsonResponse({ error: message }, status);\n}\n\n// === AUTH HELPERS ===\n\nasync function hashPassword(password, salt) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(password + salt);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\nasync function verifyPassword(password, hashedPassword, salt) {\n  const hash = await hashPassword(password, salt);\n  return hash === hashedPassword;\n}\n\nasync function signJWT(payload, secret) {\n  const header = { alg: 'HS256', typ: 'JWT' };\n  const encoder = new TextEncoder();\n  const headerBase64 = btoa(JSON.stringify(header)).replace(/=/g, '');\n  const payloadBase64 = btoa(JSON.stringify(payload)).replace(/=/g, '');\n  const data = `${headerBase64}.${payloadBase64}`;\n  \n  const key = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(secret),\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  );\n  \n  const signature = await crypto.subtle.sign('HMAC', key, encoder.encode(data));\n  const signatureBase64 = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(/=/g, '');\n  return `${data}.${signatureBase64}`;\n}\n\nasync function verifyJWT(token, secret) {\n  try {\n    const [headerBase64, payloadBase64, signatureBase64] = token.split('.');\n    const data = `${headerBase64}.${payloadBase64}`;\n    \n    const encoder = new TextEncoder();\n    const key = await crypto.subtle.importKey(\n      'raw',\n      encoder.encode(secret),\n      { name: 'HMAC', hash: 'SHA-256' },\n      false,\n      ['verify']\n    );\n    \n    const signature = Uint8Array.from(atob(signatureBase64), c => c.charCodeAt(0));\n    const isValid = await crypto.subtle.verify('HMAC', key, signature, encoder.encode(data));\n    \n    if (!isValid) return null;\n    \n    const payload = JSON.parse(atob(payloadBase64));\n    if (payload.exp < Math.floor(Date.now() / 1000)) return null;\n    \n    return payload;\n  } catch {\n    return null;\n  }\n}\n\nasync function requireAuth(request, env) {\n  const authHeader = request.headers.get('Authorization');\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\n    return null;\n  }\n  \n  const token = authHeader.substring(7);\n  return await verifyJWT(token, env.JWT_SECRET);\n}\n\n// === EMAIL SERVICE ===\n\nasync function sendEmail(env, to, subject, html, from) {\n  const apiUrl = 'https://send.api.mailtrap.io/api/send';\n  \n  const response = await fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${env.MAILTRAP_PASS}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      from: { email: from, name: 'P\u0159\u00ED\u010Dn\u00E1 Offices' },\n      to: Array.isArray(to) ? to.map(email => ({ email })) : [{ email: to }],\n      subject,\n      html\n    })\n  });\n\n  return response.ok;\n}\n\nasync function sendReservationEmails(reservation, env) {\n  const confirmationHtml = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n      <h2 style=\"color: #2c5f8d;\">\u2705 Potvrzen\u00ED rezervace</h2>\n      <p>Dobr\u00FD den <strong>${reservation.name}</strong>,</p>\n      <p>D\u011Bkujeme za Va\u0161i rezervaci sd\u00EDlen\u00E9 kancel\u00E1\u0159e.</p>\n      \n      <div style=\"background: #f3f4f6; padding: 20px; margin: 20px 0; border-radius: 8px;\">\n        <h3 style=\"margin-top: 0;\">\uD83D\uDCC5 Detaily rezervace</h3>\n        <p><strong>Datum:</strong> ${reservation.date}</p>\n        <p><strong>\u010Cas:</strong> ${reservation.time}</p>\n        <p><strong>D\u00E9lka:</strong> ${reservation.duration} ${reservation.duration === 1 ? 'hodina' : 'hodiny'}</p>\n        <p><strong>Cena:</strong> ${reservation.totalPrice} K\u010D</p>\n      </div>\n      \n      <div style=\"background: #e3f2fd; padding: 15px; margin: 20px 0; border-radius: 8px; border-left: 4px solid #2196f3;\">\n        <h4 style=\"margin-top: 0;\">\uD83D\uDCB0 Platba a kl\u00ED\u010De</h4>\n        <p style=\"margin: 0;\">Platbu a vyzvednut\u00ED kl\u00ED\u010D\u016F od kancel\u00E1\u0159e pros\u00EDm prove\u010Fte na recepci na adrese <strong>P\u0159\u00ED\u010Dn\u00E1 1, 736 01 Hav\u00ED\u0159ov - M\u011Bsto</strong>.</p>\n      </div>\n      \n      <div style=\"background: #fff3cd; padding: 15px; margin: 20px 0; border-radius: 8px; border-left: 4px solid #ffc107;\">\n        <h4 style=\"margin-top: 0;\">\u2139\uFE0F Zm\u011Bna nebo zru\u0161en\u00ED rezervace</h4>\n        <p style=\"margin: 0;\">Pro zm\u011Bnu nebo zru\u0161en\u00ED rezervace n\u00E1s pros\u00EDm kontaktujte telefonicky na \u010D\u00EDsle <strong>+420 608 429 100</strong>.</p>\n      </div>\n      \n      <div style=\"margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd;\">\n        <p><strong>\uD83D\uDCCD Adresa recepce:</strong> P\u0159\u00ED\u010Dn\u00E1 1, 736 01 Hav\u00ED\u0159ov - M\u011Bsto</p>\n        <p><strong>\uD83D\uDCDE Telefon:</strong> +420 608 429 100</p>\n        <p><strong>\uD83D\uDD50 Otev\u00EDrac\u00ED doba:</strong> Po-P\u00E1: 7:00 - 19:00</p>\n      </div>\n      \n      <p style=\"margin-top: 30px; color: #666; font-size: 14px;\">\n        T\u011B\u0161\u00EDme se na Va\u0161i n\u00E1v\u0161t\u011Bvu!<br>\n        <strong>T\u00FDm P\u0159\u00ED\u010Dn\u00E1 Offices</strong>\n      </p>\n    </div>\n  `;\n  \n  await sendEmail(env, reservation.email, 'Potvrzen\u00ED rezervace - P\u0159\u00ED\u010Dn\u00E1 Offices', confirmationHtml, env.EMAIL_RESERVATIONS);\n  \n  const notificationHtml = `\n    <h2>\uD83D\uDD14 Nov\u00E1 rezervace #${reservation.id}</h2>\n    <p><strong>Jm\u00E9no:</strong> ${reservation.name}</p>\n    <p><strong>Email:</strong> ${reservation.email}</p>\n    <p><strong>Telefon:</strong> ${reservation.phone || 'N/A'}</p>\n    <p><strong>Datum:</strong> ${reservation.date}</p>\n    <p><strong>\u010Cas:</strong> ${reservation.time}</p>\n    <p><strong>Cena:</strong> ${reservation.totalPrice} K\u010D</p>\n  `;\n  \n  await sendEmail(env, [env.EMAIL_RESERVATIONS, env.EMAIL_OWNER], `Nov\u00E1 rezervace #${reservation.id}`, notificationHtml, env.EMAIL_RESERVATIONS);\n}\n\nasync function sendCancellationEmail(reservation, env) {\n  const cancellationHtml = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n      <h2 style=\"color: #dc3545;\">\u274C Zru\u0161en\u00ED rezervace</h2>\n      <p>Dobr\u00FD den <strong>${reservation.name}</strong>,</p>\n      <p>Va\u0161e rezervace sd\u00EDlen\u00E9 kancel\u00E1\u0159e byla zru\u0161ena.</p>\n      \n      <div style=\"background: #f8d7da; padding: 20px; margin: 20px 0; border-radius: 8px; border-left: 4px solid #dc3545;\">\n        <h3 style=\"margin-top: 0;\">\uD83D\uDCC5 Zru\u0161en\u00E1 rezervace</h3>\n        <p><strong>Datum:</strong> ${reservation.date}</p>\n        <p><strong>\u010Cas:</strong> ${reservation.time}</p>\n        <p><strong>Cena:</strong> ${reservation.totalPrice} K\u010D</p>\n      </div>\n      \n      <p>Pokud jste tuto rezervaci nezru\u0161ili Vy, nebo m\u00E1te dotazy, kontaktujte n\u00E1s pros\u00EDm na:</p>\n      <p><strong>\uD83D\uDCDE Telefon:</strong> +420 608 429 100</p>\n      \n      <p style=\"margin-top: 30px; color: #666; font-size: 14px;\">\n        Budeme se t\u011B\u0161it na Va\u0161i dal\u0161\u00ED n\u00E1v\u0161t\u011Bvu!<br>\n        <strong>T\u00FDm P\u0159\u00ED\u010Dn\u00E1 Offices</strong>\n      </p>\n    </div>\n  `;\n  \n  await sendEmail(env, reservation.email, 'Zru\u0161en\u00ED rezervace - P\u0159\u00ED\u010Dn\u00E1 Offices', cancellationHtml, env.EMAIL_RESERVATIONS);\n}\n\nasync function sendInquiryEmails(inquiry, env) {\n  const confirmationHtml = `\n    <h2>\u2709\uFE0F D\u011Bkujeme za V\u00E1\u0161 z\u00E1jem</h2>\n    <p>Dobr\u00FD den <strong>${inquiry.name}</strong>,</p>\n    <p>D\u011Bkujeme za Va\u0161i zpr\u00E1vu. Brzy se V\u00E1m ozveme.</p>\n    <p><strong>\uD83D\uDCDE Telefon:</strong> +420 608 429 100</p>\n  `;\n  \n  await sendEmail(env, inquiry.email, 'D\u011Bkujeme za V\u00E1\u0161 z\u00E1jem - P\u0159\u00ED\u010Dn\u00E1 Offices', confirmationHtml, env.EMAIL_INFO);\n  \n  const typeLabels = { 'contact': 'Kontaktn\u00ED formul\u00E1\u0159', 'apartment': 'Popt\u00E1vka - Byt', 'office': 'Popt\u00E1vka - Kancel\u00E1\u0159' };\n  const notificationHtml = `\n    <h2>${typeLabels[inquiry.type]}</h2>\n    <p><strong>Jm\u00E9no:</strong> ${inquiry.name}</p>\n    <p><strong>Email:</strong> ${inquiry.email}</p>\n    <p><strong>Telefon:</strong> ${inquiry.phone || 'N/A'}</p>\n    <p><strong>Zpr\u00E1va:</strong> ${inquiry.message || 'N/A'}</p>\n  `;\n  \n  await sendEmail(env, [env.EMAIL_INFO, env.EMAIL_OWNER], `${typeLabels[inquiry.type]} - ${inquiry.name}`, notificationHtml, env.EMAIL_INFO);\n}\n\n// === MAIN WORKER ===\n\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    const path = url.pathname;\n    const method = request.method;\n    \n    // CORS preflight\n    if (method === 'OPTIONS') {\n      return new Response(null, { headers: corsHeaders });\n    }\n    \n    try {\n      // Health check\n      if (path === '/api/health' && method === 'GET') {\n        return jsonResponse({\n          status: 'OK',\n          timestamp: new Date().toISOString(),\n          environment: 'cloudflare-workers'\n        });\n      }\n      \n      // === AUTH ===\n      if (path === '/api/auth/login' && method === 'POST') {\n        const { username, password } = await request.json();\n        \n        if (username !== env.ADMIN_USERNAME) {\n          return errorResponse('Invalid credentials', 401);\n        }\n        \n        const salt = 'pricna-salt-2025';\n        const isValid = await verifyPassword(password, env.ADMIN_PASSWORD_HASH, salt);\n        \n        if (!isValid) {\n          return errorResponse('Invalid credentials', 401);\n        }\n        \n        const payload = {\n          username,\n          iat: Math.floor(Date.now() / 1000),\n          exp: Math.floor(Date.now() / 1000) + (24 * 60 * 60)\n        };\n        \n        const token = await signJWT(payload, env.JWT_SECRET);\n        return jsonResponse({ success: true, token, user: { username } });\n      }\n      \n      // === RESERVATIONS ===\n      if (path === '/api/reservations' && method === 'GET') {\n        const user = await requireAuth(request, env);\n        if (!user) return errorResponse('Unauthorized', 401);\n        \n        const { results } = await env.DB.prepare('SELECT * FROM reservations ORDER BY date DESC, time DESC LIMIT 100').all();\n        return jsonResponse(results);\n      }\n      \n      if (path === '/api/reservations' && method === 'POST') {\n        const data = await request.json();\n        \n        if (!data.date || !data.timeSlots || !data.name || !data.email) {\n          return errorResponse('Missing required fields', 400);\n        }\n        \n        const timeSlots = Array.isArray(data.timeSlots) ? data.timeSlots : [data.timeSlots];\n        const time = timeSlots.join(', ');\n        const duration = timeSlots.length;\n        \n        const result = await env.DB.prepare(`\n          INSERT INTO reservations (date, time, duration, name, email, phone, company, message, totalPrice, status)\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 'pending')\n        `).bind(\n          data.date, time, duration, data.name, data.email,\n          data.phone || null, data.company || null, data.message || null, data.totalPrice || 0\n        ).run();\n        \n        const reservationId = result.meta.last_row_id;\n        const { results } = await env.DB.prepare('SELECT * FROM reservations WHERE id = ?').bind(reservationId).all();\n        const reservation = results[0];\n        \n        ctx.waitUntil(sendReservationEmails(reservation, env));\n        \n        return jsonResponse({ success: true, reservation }, 201);\n      }\n      \n      if (path.match(/^\\/api\\/reservations\\/\\d+$/) && method === 'PUT') {\n        const user = await requireAuth(request, env);\n        if (!user) return errorResponse('Unauthorized', 401);\n        \n        const id = path.split('/').pop();\n        const data = await request.json();\n        \n        await env.DB.prepare('UPDATE reservations SET status = ?, message = ? WHERE id = ?')\n          .bind(data.status || 'pending', data.message || null, id).run();\n        \n        const { results } = await env.DB.prepare('SELECT * FROM reservations WHERE id = ?').bind(id).all();\n        return jsonResponse({ success: true, reservation: results[0] });\n      }\n      \n      if (path.match(/^\\/api\\/reservations\\/\\d+\\/cancel$/) && method === 'POST') {\n        const user = await requireAuth(request, env);\n        if (!user) return errorResponse('Unauthorized', 401);\n        \n        const id = path.split('/')[3];\n        \n        // Get reservation details before cancelling\n        const { results } = await env.DB.prepare('SELECT * FROM reservations WHERE id = ?').bind(id).all();\n        const reservation = results[0];\n        \n        if (!reservation) {\n          return errorResponse('Reservation not found', 404);\n        }\n        \n        // Update status to cancelled\n        await env.DB.prepare('UPDATE reservations SET status = ? WHERE id = ?')\n          .bind('cancelled', id).run();\n        \n        // Send cancellation email\n        ctx.waitUntil(sendCancellationEmail(reservation, env));\n        \n        return jsonResponse({ success: true, message: 'Reservation cancelled' });\n      }\n      \n      if (path.match(/^\\/api\\/reservations\\/\\d+$/) && method === 'DELETE') {\n        const user = await requireAuth(request, env);\n        if (!user) return errorResponse('Unauthorized', 401);\n        \n        const id = path.split('/').pop();\n        await env.DB.prepare('DELETE FROM reservations WHERE id = ?').bind(id).run();\n        return jsonResponse({ success: true, message: 'Reservation deleted' });\n      }\n      \n      // === INQUIRIES ===\n      if (path === '/api/inquiries' && method === 'GET') {\n        const user = await requireAuth(request, env);\n        if (!user) return errorResponse('Unauthorized', 401);\n        \n        const { results } = await env.DB.prepare('SELECT * FROM inquiries ORDER BY createdAt DESC LIMIT 100').all();\n        return jsonResponse(results);\n      }\n      \n      if (path === '/api/inquiries' && method === 'POST') {\n        const data = await request.json();\n        \n        if (!data.type || !data.name || !data.email) {\n          return errorResponse('Missing required fields', 400);\n        }\n        \n        const result = await env.DB.prepare(`\n          INSERT INTO inquiries (type, name, email, phone, service, itemName, message)\n          VALUES (?, ?, ?, ?, ?, ?, ?)\n        `).bind(\n          data.type, data.name, data.email, data.phone || null,\n          data.service || null, data.itemName || null, data.message || null\n        ).run();\n        \n        const inquiryId = result.meta.last_row_id;\n        const { results } = await env.DB.prepare('SELECT * FROM inquiries WHERE id = ?').bind(inquiryId).all();\n        const inquiry = results[0];\n        \n        ctx.waitUntil(sendInquiryEmails(inquiry, env));\n        \n        return jsonResponse({ success: true, inquiry }, 201);\n      }\n      \n      // 404\n      return errorResponse('Not Found', 404);\n      \n    } catch (error) {\n      console.error('Worker error:', error);\n      return jsonResponse({\n        error: 'Internal Server Error',\n        message: error.message\n      }, 500);\n    }\n  }\n};\n"],
  "mappings": "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",
  "names": []
}
